Timestamp,1. Are you a professional smart contract developer?,2. Are you involved in open source software development efforts?,3. Please describe your main role in developing smart contracts?,4. How many years of experience do you have in Ethereum smart contract development/testing/project management(decimals ok)?,5. What is your current country of residence?,6. Will you add Selfdestruct functions in your future smart contracts? ,7. Why do you add Selfdestruct functions,8. Why do you not add Selfdestruct functions
2019/08/26 9:07:02 AM GMT+8,yes,Yes,Research and security,3,Australia,Yes (Go to Question 7),"1. encounter security problems.
2. I do not this contract anymore.
3. I can withdraw my money if there are bugs found in my contracts ",
2019/08/26 1:16:35 PM GMT+8,yes,Yes,Development,2,Australia,Yes (Go to Question 7),For upgrading smart contracts or destroying vulnerable smart contracts.,
2019/08/26 1:28:56 PM GMT+8,no,Yes,Development,1,China,Yes (Go to Question 7),it is convenient to change code including fixing bugs or adding functions.,
2019/08/26 2:40:58 PM GMT+8,no,Yes,Testing,2,HK,Yes (Go to Question 7),withdraw Ethers when bugs are found in your contract.,
2019/08/26 4:34:53 PM GMT+8,yes,Yes,Management,2,Romania,Yes (Go to Question 7),,
2019/08/26 5:46:18 PM GMT+8,no,Yes,Development,1,south korea,Yes (Go to Question 7),for secure of asset,
2019/08/26 6:12:47 PM GMT+8,no,Yes,Development,1.5,Switzerland,No (Go to Question 8),,"I have not found a use for it so far. I have never seen a reason to completely remove a contract from the blockchain. Usually a withdraw function is enough to ""get out""."
2019/08/26 6:15:55 PM GMT+8,yes,Yes,Development,2,Germany,No (Go to Question 8),," If there is an owner of a contract who can selfdestruct the contract I, and probably many other people, wouldn't put their money on it. Only if  there are certain kinds of contracts that are just agreements, i.e. they execute their logic only once a specific event is happened. After they performed their duty they can be selfdestructed."
2019/08/26 6:56:35 PM GMT+8,no,No,Testing,0.5,China,No (Go to Question 8),,I just test my contracts
2019/08/26 7:54:40 PM GMT+8,no,Yes,Development,2,Canada,No (Go to Question 8),,Just experimenting so I hadn't considered it.
2019/08/26 9:21:18 PM GMT+8,yes,Yes,Development,1,Argentina,No (Go to Question 8),,"We work with upgradeable smart contracts, so unless there is a specific use case for the business logic I don't see a reason to add it"
2019/08/26 10:51:42 PM GMT+8,yes,Yes,Development,2,Israel,No (Go to Question 8),,Its a effectiveness Vs risk thing. The risk it high. The benefits are not big enough to consider doing it.
2019/08/27 6:09:58 AM GMT+8,yes,Yes,Development,1.5,United States ,No (Go to Question 8),,The application will not be trust less and censorship resistant at that point. 
2019/08/27 10:04:29 AM GMT+8,yes,Yes,Development,1.5,Singapore,No (Go to Question 8),,"Don't see a need to. Also, it's what caused 1 of the Parity wallet hacks..."
2019/08/27 11:07:43 AM GMT+8,no,Yes,Testing,0.3,China,No (Go to Question 8),,it is not sensible
2019/08/27 2:51:12 PM GMT+8,yes,No,Development,1.5,United Kingdom,No (Go to Question 8),,"Design patterns exist for deprecating contracts or swapping functionality of contracts by updating addresses for related contract interfaces. I personally believe that once code is published the the chain, it shouldn't be removed, and only references to said smart contact should be updated. Additionally, having destruct functions opens attack vectors for adversaries to exploit."
2019/08/27 8:21:57 PM GMT+8,yes,Yes,Development,1.8,USA,No (Go to Question 8),,My contracts do not need it
2019/08/28 9:33:54 AM GMT+8,yes,Yes,Development,3,New Zealand,No (Go to Question 8),Cleaning up after yourself is good blockchain etiquette,"Selfdestruct can introduce risks if not handled carefully, including loss of funds - see the second Parity multisig issue, for instance."
2019/08/28 2:38:35 PM GMT+8,yes,Yes,Development,1,Ecuador,Yes (Go to Question 7),In case the smart contract was deployed using a Factory and had a temporal living time within the system mechanism design (e.g on-chain game sessions),if the smart contract design requires eternal auditability
2019/08/28 5:26:56 PM GMT+8,no,Yes,Testing,1.5,AT,Yes (Go to Question 7),,
2019/08/28 11:48:12 PM GMT+8,no,Yes,Development,1,The Netherlands,No (Go to Question 8),,"Worried that it'll be misused, and erode trust. With hindsight I would add a self destruct though"
2019/08/29 12:59:39 AM GMT+8,yes,Yes,Development,3,United States,No (Go to Question 8),,Security concerns for third-party contracts
2019/08/29 9:48:19 AM GMT+8,yes,Yes,Development,2,Argentina,Yes (Go to Question 7),"It's a useful pattern in short-lived contracts, e.g. a time-locked escrow. ",
2019/08/29 10:47:58 AM GMT+8,yes,Yes,Development,2,Republic of Korea,Yes (Go to Question 7),1. Clean code effort 2. Less size effort,
2019/08/29 6:08:06 PM GMT+8,yes,Yes,Development,3,Malaysia,Yes (Go to Question 7),One off contracts for limited use : to free up chain space.,Better for transparency to leave the code there.
2019/08/31 4:44:47 AM GMT+8,yes,Yes,Development,2.5,Not saying,No (Go to Question 8),,"The semantics of a destroyed contract are surprising for most developers. For example, if a contract doesn't have a payable fallback function you don't expect that address to accept ether transfers. However, after destroying the contract those transfers will be accepted. Moreover, I think the problem of garbage collecting the blockchain should be dealt at the node level, and not be a concern of developers."
2019/09/02 4:17:42 PM GMT+8,yes,Yes,Management,4,Germany,No (Go to Question 8),End of software lifecycle for this particular piece of code,"As everything in computer science, if used correctly there are benefits, but the benefit of saving a few cents by deleting storage and opening a potential big exploit in a contract holding substantial amount of assets... is not worth the risk"
2019/09/03 2:44:22 AM GMT+8,yes,Yes,Development,1,Canada,No (Go to Question 8),,"Contract upgrading should be done at the social layer, not at the immutable blockchain layer. Contracts should remain on chain, even if it means a community fork."
2019/09/03 11:14:21 AM GMT+8,yes,Yes,Development,2,United States,No (Go to Question 8),,attacker surface area & bug potential. lack of significant incentive to call it.
2019/09/03 2:38:51 PM GMT+8,yes,Yes,Development,2,United Kingdom,No (Go to Question 8),,Lack of immutability
2019/09/03 4:29:03 PM GMT+8,no,Yes,Development,4,Switzerland,Yes (Go to Question 7),Get gas back and terminate the contract,
2019/09/03 4:39:20 PM GMT+8,yes,Yes,Security Auditor,2,Romania,Yes (Go to Question 7),You can easily withdraw ether at the end of the contract lifecycle. I try not to have dead code on the blockchain.,
2019/09/03 10:26:37 PM GMT+8,no,Yes,Auditing,1,Argentina,Yes (Go to Question 7),Security related issues. Retrieve remaining.,
2019/09/04 2:18:45 AM GMT+8,yes,Yes,Development,2.5,Brazil,No (Go to Question 8),,The benefits aren't really worth it for the security breaches it opens. 
2019/09/04 2:10:28 PM GMT+8,yes,Yes,Development,1,Brazil,No (Go to Question 8),To ensure no one would use it after contract migration,No reason to make it selfdestruct in general; it can increase the attack surface of my contract
2019/09/04 2:14:57 PM GMT+8,yes,Yes,Development,3.6,Ukraine,No (Go to Question 8),,"1. Additional complexity. 2. There is a rather high chance that someone will send tokens/ETH to a destructed contract, which will be locked there. 3. There is no good reason to destroy a comtract at the moment."
2019/09/04 2:25:42 PM GMT+8,yes,Yes,Development,1.5,France,Yes (Go to Question 7),"Temporary contracts, but also in case of a migration is needed or a security issue is found.","In certain upgradability contract architecture, this can be problematic as other contracts might be able to call it."
2019/09/04 4:38:37 PM GMT+8,yes,Yes,Development,0.5,India,Yes (Go to Question 7),Security Concerns,
2019/09/04 5:09:33 PM GMT+8,yes,Yes,Management,4,Russia,Yes (Go to Question 7),To mark that part of state could be removed safely on the nodes.,If this could be called insecurely by someone.
2019/09/04 5:33:23 PM GMT+8,yes,Yes,Development,3,Croatia,Yes (Go to Question 7),"Payout and cleanup, project end. If I'm aware of them needing to disappear in advance. If I know I'm developing something temporary, I will make it destructible.",
2019/09/04 8:59:39 PM GMT+8,yes,Yes,Management,3,USA,No (Go to Question 8),,Immutability
2019/09/05 4:24:38 AM GMT+8,no,Yes,I am developing the smart contract language for the Aeternity Blockchain,2,Sweden,No (Go to Question 8),,Had not had an actual use for it (yet).
2019/09/05 10:28:06 AM GMT+8,yes,Yes,Development,3.5,China,No (Go to Question 8),,"Most of time it's needless.  if I need update/change the smart contract, the better way is creating a new one, it likes a hard fork. The selfdestruct is not designed for updating the smart contract."
2019/09/05 7:44:44 PM GMT+8,yes,Yes,Development,5,201304,Yes (Go to Question 7),"When the purpose of the contract is served we can use that to self-destruct so no-one will be able to call that contract on future, just can see it's pervious states. ",
2019/09/05 8:55:42 PM GMT+8,no,Yes,Development,1.5,UK,Yes (Go to Question 7),To shut down a contract in case of security concerns or a migration to a new version. ,
2019/09/05 8:56:12 PM GMT+8,yes,Yes,Development,1,USA,No (Go to Question 8),Rather would make smart contract upgradable than with self destruct,"Attack surface increases, adds liability to owners of smart contract"
2019/09/05 10:42:39 PM GMT+8,no,Yes,Security researcher,2.5,Germany,No (Go to Question 8),,It increases the impact of a compromise
2019/09/06 1:05:48 AM GMT+8,yes,Yes,Testing,3.5,Brazil,No (Go to Question 8),,"Even if the account is not hacked, I like keeping the history there, even if just for myself"
2019/09/06 9:27:19 AM GMT+8,no,Yes,Development,0.5,USA,No (Go to Question 8),,"I feel that this is a difficult decision as both sides have its risks, however the safer choice (by a tiny margin) seems to be avoiding the selfdestruct function. As mentioned in the survey, this function may be executed by an attacker or someone who has access to the function. Without the selfdestruct function, we cannot remove code from the blockchain but if there is a major issue with the code, then we can modify the downstream/upstream dependencies to either use a new contract that fixes the issue."
2019/09/06 11:50:47 AM GMT+8,yes,Yes,Development,2,Netherlands,No (Go to Question 8),,Haven__ needed it so far
2019/09/06 2:45:03 PM GMT+8,yes,Yes,Development,2,Russia,No (Go to Question 8),,People will be able to lost money by sending ETH to this address
2019/09/06 4:15:12 PM GMT+8,no,Yes,Development,2.2,Czech Republic,No (Go to Question 8),Temporary contract? Not many reasons,"Depends on the situation, but increased complexity/attack vector/dev time is mainly against it"
2019/09/06 8:11:33 PM GMT+8,yes,Yes,Development,3.5,UK,No (Go to Question 8),,"Reduces trustlessness, makes auditing harder re. CREATE2"
2019/09/06 8:40:39 PM GMT+8,yes,Yes,Development,3,Mexico,Yes (Go to Question 7),Withdraw Ethers,Security
2019/09/06 9:02:29 PM GMT+8,yes,Yes,Development & Testing,1,India,No (Go to Question 8),,"Chances are after extraction of ethers from the contract, the attacker may call selfdestruct which will lead to removal of the contract code from the blockchain. That leaves us with no point of tracing the attack this is what I think."
2019/09/06 9:25:13 PM GMT+8,yes,Yes,Development,3,Italy,Yes (Go to Question 7),To try to restore critical situations,When contract does not manage funds but only information
2019/09/06 9:38:09 PM GMT+8,yes,No,Development,0.5,Dominican Republic,Yes (Go to Question 7),To stop the contract if it is hacked and to destroy it if it couldn't be recovered from the attack and move the contract funds to the contract owner or a specified account.,
2019/09/06 11:28:06 PM GMT+8,no,Yes,Development,5,Japan,No (Go to Question 8),,"I though that it is not need for my contract, because almost all of my development on ethereum are for testing and studying."
2019/09/07 12:39:30 AM GMT+8,yes,Yes,Development,3,Uruguay,No (Go to Question 8),,Not safe. Allows for metamorphic contracts.
2019/09/11 6:06:35 AM GMT+8,yes,Yes,Development,2.5,Italy,No (Go to Question 8),,"I use selfdestruct only for testing SC, not for ""production"" ones. Usually a SC is there as a guarantee for all its users that it will behave exactly as programmed, and it will continue to do it whatever it is. If there's a selfdestruct this axiom is violated. Moreover, in most cases selfdestruct function must be restricted to a sort of administrator, and I don't trust in SC programmed to function with an administrator. And finally, there's no a real saving in blockchain space even removing the SC: it's txs are not removed, and those txs are the real ""weight"" of the SC in the blockchain, not the SC's code itself. If the self destruct remove those TXs, preserving at the same time data and state integrity, then maybe it will be worth to think about it."
2019/09/17 11:00:23 PM GMT+8,yes,Yes,Development,1,Argentina,Yes (Go to Question 7),,
2019/09/24 2:36:47 PM GMT+8,yes,Yes,Development,3,Bulgaria,Yes (Go to Question 7),"Reclaim storage and make transactions cheaper, contract upgrades",